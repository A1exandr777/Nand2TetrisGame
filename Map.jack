class Map {
    field Array map;
    field int n, m;
    field int size;

    constructor Map new(int cell_size, int w, int h) {
        var int i;
    
        let m = (w / cell_size);
        let n = (h / cell_size);
        let size = cell_size;

        let map = Array.new(n * m);

        // заполняет весь массив -1
        let i = 0;
        while (~(i = (n * m))) {
            let map[i] = -1;
            let i = i + 1;
        }
        return this;
    }

    method void clear() {
        var int i;
        let i = 0;
        while (~(i = (n * m))) {
            let map[i] = -1;
            let i = i + 1;
        }
        return;
    }
    
    // getter
    method boolean get_cell (int x, int y) {
        return map[y * m + x];
    }

    // setter
    method void set_cell (int x, int y, int val) {
        let map[y * m + x] = val;
        return;
    }

    method void change_cell (int x, int y) {
        if (map[y * m + x] = -1) {
            let map[y * m + x] = -2;
            return;
        } 
        if (map[y * m + x] = -2) {
            let map[y * m + x] = -3;
            return;
        } 
        if (map[y * m + x] = -3) {
            let map[y * m + x] = -1;
            return;
        }
        return;
    }
    
    method void dispose() {
        do map.dispose();
        do Memory.deAlloc(this);
        return;
    }
}
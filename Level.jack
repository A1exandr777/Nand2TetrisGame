class Level {
    // строки в формате (4 elems) x count, где каждая строка предсталяет собой
    field Array level;
    
    field int x0, y0;
    field int n, m;
    field int cell_count;

    constructor Level new(int cell_size, int count, int x, int y, int w, int h) {
        let cell_count = count;
        let m = (w / cell_size);
        let n = (h / cell_size);
        let x0 = x;
        let y0 = y;

        let level = Array.new(cell_count * cell_count);
        do generate_level_1();
        return this;
    }

    method void generate_level_1() {
        // тут в ручную нужно завести цифры рисунка
        let level[0] = 1;
        let level[10] = 1;
        let level[20] = 1;
        let level[30] = 1;
        let level[40] = 1;
        let level[50] = 1;
        let level[60] = 1;
        let level[70] = 1;
        let level[90] = 1;
        let level[1] = 1;
        let level[2] = 1;
        let level[3] = 1;
        let level[5] = 1;
        let level[7] = 1;
        let level[9] = 1;
        let level[11] = 1;
        let level[13] = 1;
        let level[15] = 1;
        let level[17] = 1;
        let level[19] = 1;
        let level[10] = 1;
        let level[21] = 1;
        let level[22] = 1;
        let level[23] = 1;
        let level[25] = 1;
        let level[47] = 1;
        let level[19] = 1;
        let level[11] = 1;
        let level[13] = 1;
        let level[45] = 1;
        let level[17] = 1;
        let level[19] = 1;
        return;
    }

    method void write_rows(Map map) {
        var int x1, y1, pad;
        var int x, y, sum;
        var boolean f;
        let f = false;
        let pad = 6;
        let sum = 0;
        let x = 0;
        let y = 0;
        let x1 = x0 - pad;
        let y1 = y0;
        
        while (~(y = cell_count)) {
            while (~(x = cell_count)) { 
                // р
                if (level[y * cell_count + x] = 1) {
                    if (f) {
                        let sum = sum + 1;
                    } else {
                        if (~(sum = 0)) {
                            do map.set_cell(x1, y1, sum);
                        }
                        let x1 = x1 + 1;
                        let sum = 1;
                    }
                    let f = true;
                } else {
                    let f = false;
                }
                // цикл
                let x = x + 1;
            }
            // р
            if (~(sum = 0)) {
                do map.set_cell(x1, y1, sum);
                let sum = 0;
                let f = false;
            }
            let y1 = y1 + 1;
            let x1 = x0 - pad;

            // цикл
            let x = 0;
            let y = y + 1;
        }
        return;
    }

    method void write_columns(Map map) {
        var int x1, y1, pad;
        var int x, y, sum;
        var boolean f;
        let f = false;
        let pad = 6;
        let sum = 0;
        let x = 0;
        let y = 0;
        let x1 = x0;
        let y1 = y0 - pad;
        
        while (~(x = cell_count)) {
            while (~(y = cell_count)) { 
                // р
                if (level[y * cell_count + x] = 1) {
                    if (f) {
                        let sum = sum + 1;
                    } else {
                        if (~(sum = 0)) {
                            do map.set_cell(x1, y1, sum);
                        }
                        let y1 = y1 + 1;
                        let sum = 1;
                    }
                    let f = true;
                } else {
                    let f = false;
                }
                // цикл
                let y = y + 1;
            }
            // р
            if (~(sum = 0)) {
                do map.set_cell(x1, y1, sum);
                let sum = 0;
                let f = false;
            }
            let x1 = x1 + 1;
            let y1 = y0 - pad;

            // цикл
            let y = 0;
            let x = x + 1;
        }
        return;
    }
    
    method boolean check_done(Map map) {
        var int x, y;
        var boolean f1, f2;
        let f1 = false;
        let f2 = false;
        let x = 0;
        let y = 0;
        
        while (~(y = cell_count)) {
            while (~(x = cell_count)) { 
                if (level[y * cell_count + x] = 1) {
                    let f1 = true;
                }       
                if (map.get_cell(x0 + x, y0 + y) = -2) {
                    let f2 = true;
                }
                if (((~f1) & f2) | (f1 & (~f2))) {
                    return false;
                }
                let f1 = false;
                let f2 = false;
                let x = x + 1;
            }
            let x = 0;
            let y = y + 1;
        }
        return true;
    }
}
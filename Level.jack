class Level {
    // строки в формате (4 elems) x count, где каждая строка предсталяет собой
    field Array level;
    field Array level_id;
    
    field int current_id;
    field int x0, y0;
    field int n, m;
    field int cell_count;

    constructor Level new(Map map, int cell_size, int count, int x, int y, int w, int h) {
        var int i;
        let cell_count = count;
        let m = (w / cell_size);
        let n = (h / cell_size);
        let x0 = x;
        let y0 = y;

        let level = Array.new(cell_count * cell_count);

        // выбор уровней
        let level_id = Array.new(6);
        let level_id[0] = 0;
        let level_id[1] = 0;
        let level_id[2] = 0;
        let level_id[3] = 0;
        let level_id[4] = 0;
        let current_id = 0;

        do change_level(0, map);
        return this;
    }

    method int get_level_status(int id) {
        return level_id[id];
    }

    method void set_cur_status(int val) {
        let level_id[current_id] = val;
        return;
    }

    method void change_level(int id, Map map) {
        if (level_id[current_id] = 1) {
            let level_id[current_id] = 0;
        }
        if (level_id[id] = 0) {
            let level_id[id] = 1;
        }

        let current_id = id;
        do clear();
        
        if (id = 0) {
            do generate_level_1();
        }
        if (id = 1) {
            do generate_level_2();
        }    
        if (id = 2) {
            do generate_level_3();
        }
        if (id = 3) {
            do generate_level_4();
        }  
        if (id = 4) {
            do generate_level_5();
        }
        do map.clear();
        do write_rows(map);
        do write_columns(map);
        return;
    }

    method void write_rows(Map map) {
        var int x1, y1, pad;
        var int x, y, sum;
        var boolean f;
        let f = false;
        let pad = 6;
        let sum = 0;
        let x = 0;
        let y = 0;
        let x1 = x0 - pad;
        let y1 = y0;
        
        while (~(y = cell_count)) {
            while (~(x = cell_count)) { 
                // р
                if (level[y * cell_count + x] = 1) {
                    if (f) {
                        let sum = sum + 1;
                    } else {
                        if (~(sum = 0)) {
                            do map.set_cell(x1, y1, sum);
                        }
                        let x1 = x1 + 1;
                        let sum = 1;
                    }
                    let f = true;
                } else {
                    let f = false;
                }
                // цикл
                let x = x + 1;
            }
            // р
            if (~(sum = 0)) {
                do map.set_cell(x1, y1, sum);
                let sum = 0;
                let f = false;
            }
            let y1 = y1 + 1;
            let x1 = x0 - pad;

            // цикл
            let x = 0;
            let y = y + 1;
        }
        return;
    }

    method void write_columns(Map map) {
        var int x1, y1, pad;
        var int x, y, sum;
        var boolean f;
        let f = false;
        let pad = 6;
        let sum = 0;
        let x = 0;
        let y = 0;
        let x1 = x0;
        let y1 = y0 - pad;
        
        while (~(x = cell_count)) {
            while (~(y = cell_count)) { 
                // р
                if (level[y * cell_count + x] = 1) {
                    if (f) {
                        let sum = sum + 1;
                    } else {
                        if (~(sum = 0)) {
                            do map.set_cell(x1, y1, sum);
                        }
                        let y1 = y1 + 1;
                        let sum = 1;
                    }
                    let f = true;
                } else {
                    let f = false;
                }
                // цикл
                let y = y + 1;
            }
            // р
            if (~(sum = 0)) {
                do map.set_cell(x1, y1, sum);
                let sum = 0;
                let f = false;
            }
            let x1 = x1 + 1;
            let y1 = y0 - pad;

            // цикл
            let y = 0;
            let x = x + 1;
        }
        return;
    }
    
    method boolean check_done(Map map) {
        var int x, y;
        var boolean f1, f2;
        let f1 = false;
        let f2 = false;
        let x = 0;
        let y = 0;
        
        while (~(y = cell_count)) {
            while (~(x = cell_count)) { 
                if (level[y * cell_count + x] = 1) {
                    let f1 = true;
                }       
                if (map.get_cell(x0 + x, y0 + y) = -2) {
                    let f2 = true;
                }
                if (((~f1) & f2) | (f1 & (~f2))) {
                    return false;
                }
                let f1 = false;
                let f2 = false;
                let x = x + 1;
            }
            let x = 0;
            let y = y + 1;
        }
        return true;
    }

    method void clear() {
        var int i;
        let i = cell_count * cell_count;
        while (~(i = 0)) {
            let i = i - 1;
            let level[i] = 0;
        }
        return;
    }
    method void generate_level_1() {
        // тут в ручную нужно завести цифры рисунка
        let level[0] = 1;
        let level[10] = 1;
        let level[20] = 1;
        let level[30] = 1;
        let level[40] = 1;
        let level[50] = 1;
        let level[60] = 1;
        let level[70] = 1;
        let level[90] = 1;
        let level[1] = 1;
        let level[2] = 1;
        let level[3] = 1;
        let level[5] = 1;
        let level[7] = 1;
        let level[9] = 1;
        let level[11] = 1;
        let level[13] = 1;
        let level[15] = 1;
        let level[17] = 1;
        let level[19] = 1;
        let level[10] = 1;
        let level[21] = 1;
        let level[22] = 1;
        let level[23] = 1;
        let level[25] = 1;
        let level[47] = 1;
        let level[19] = 1;
        let level[11] = 1;
        let level[13] = 1;
        let level[45] = 1;
        let level[17] = 1;
        let level[19] = 1;
        return;
    }

    method void generate_level_2() {
        // тут в ручную нужно завести цифры рисунка
        let level[0] = 1;
        let level[10] = 1;
        let level[20] = 1;
        let level[30] = 1;
        return;
    }
    method void generate_level_3() {
        // тут в ручную нужно завести цифры рисунка
        let level[0] = 1;
        return;
    }
    method void generate_level_4() {
        // тут в ручную нужно завести цифры рисунка
        let level[2] = 1;
        return;
    }
    method void generate_level_5() {
        // тут в ручную нужно завести цифры рисунка
        let level[3] = 1;
        return;
    }
}